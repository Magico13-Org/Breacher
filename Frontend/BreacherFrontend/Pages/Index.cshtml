@page
@model IndexModel
@{
    ViewData["Title"] = "Breacher";
}

<div class="text-center">
    <h1 class="display-4">Breach Protocol Solver</h1>
    <p>Hey choom, just upload a screenshot of the Breach Protocol screen, or manually type it all out if you prefer, and hit the solve button. You can adjust any parameters afterward.</p>
    <form enctype="multipart/form-data" method="post">
        <dl>
            <dt>
                <label>Upload Screenshot</label>
            </dt>
            <dd>
                <input asp-for="FormFile" type="file" />
                <span asp-validation-for="FormFile"></span>
            </dd>
            <dt>
                <label>Buffer size:</label>
            </dt>
            <dd>
                <input type="number" asp-for="BufferSize" />
            </dd>
            <dt>
                <label>Target Sequences:</label>
            </dt>
            <dd>
                <textarea rows="@Model.TargetCount" asp-for="Targets"></textarea>
            </dd>
            <dt>
                <label>Code Matrix:</label>
            </dt>
            <dd>
                <textarea rows="@Model.GridSize" asp-for="Grid"></textarea>
            </dd>
            <dd>
                <input asp-for="ExtractedImage" />
                <input asp-for="GridBoxes" />
            </dd>
        </dl>
        
        <input asp-page-handler="Solve" class="btn" type="submit" value="Solve" />
    </form>

    @if (Model.BreachData != null)
    {
        <hr />
        <p>
            Found Sequence: @Html.Raw(Model.Sequence) <br />
            Positions: @Html.Raw(Model.SequencePositions) <br />
            Score: @Html.Raw(Model.BreachData.Score)
        </p>
        @if (!string.IsNullOrEmpty(Model.BreachData.SolutionImage))
        {
            <img src="data:image/jpg;base64, @Model.BreachData.SolutionImage" alt="Output Image" />
        }
    }
</div>
